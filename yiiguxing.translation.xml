<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="582" />
    <option name="newTranslationDialogX" value="815" />
    <option name="newTranslationDialogY" value="450" />
    <histories>
      <item value="Compound Identifier" />
      <item value="Identifier" />
      <item value="Unsigned Int Literal" />
      <item value="Interval Literal" />
      <item value="Non Interval Literal" />
      <item value="sub-classes may override" />
      <item value="get Conformance" />
      <item value="allow Explicit Row Value Constructor" />
      <item value="Remove the ROW keyword if the dialect does not allow that" />
      <item value="index (1) must be less than size (1)" />
      <item value="must be less than size" />
      <item value="operand" />
      <item value="get Type" />
      <item value="get Full Type String" />
      <item value="compare Names" />
      <item value="Row types must be the same, except for field names." />
      <item value="verify Type Equivalence" />
      <item value="propagate" />
      <item value="Cannot add expression of different type to set" />
      <item value="Starts building an operand by specifying its class. Call further methods on the returned {@link OperandDetailBuilder} to complete the operand." />
      <item value="Sets a trait of this operand." />
      <item value="Sets the predicate of this operand" />
      <item value="one Input" />
      <item value="inputs" />
      <item value="unordered Inputs" />
      <item value="Supplies an operand that has been built manually" />
      <item value="exactly" />
      <item value="cloub" />
      <item value="clobd" />
      <item value="递归处理" />
      <item value="递归" />
      <item value="Creates a {@link Filter} of an array of predicates." />
      <item value="Guaranteed to throw an exception and leave the list unmodified." />
      <item value="Rex Input Ref" />
      <item value="Rex" />
      <item value="Operand" />
      <item value="Sql Data Type Spec" />
      <item value="Project select clause." />
      <item value="derive Alias" />
      <item value="PEEK FIELDS DEFAULT" />
      <item value="This is a traditional structured type, where each field must be referenced explicitly. Also, when referencing a struct column, you need to qualify it with the table alias, per standard SQL. For instance, SELECT c.address.zipcode FROM customer AS c is valid but SELECT address.zipcode FROM customer it not valid." />
      <item value="This is a traditional structured type, where each field must be referenced explicitly. &lt;p&gt;Also, when referencing a struct column, you need to qualify it with the table alias, per standard SQL. For instance, {@code SELECT c.address.zipcode FROM customer AS c} is valid but {@code SELECT address.zipcode FROM customer} it not valid." />
      <item value="FULLY QUALIFIED" />
      <item value="数据源初始化完成" />
      <item value="数据源初始hua完成" />
      <item value="数据源初始胡完成" />
      <item value="数据源初始胡wan'c" />
      <item value="数据源初始胡" />
      <item value="数据源" />
      <item value="正在初始化数据源 a" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="70" />
        <entry key="ENGLISH" value="72" />
        <entry key="FRENCH" value="1" />
        <entry key="ROMANIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1620711509653" />
  </component>
</application>