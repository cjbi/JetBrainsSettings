<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="584" />
    <option name="newTranslationDialogX" value="815" />
    <option name="newTranslationDialogY" value="450" />
    <histories>
      <item value="Operand" />
      <item value="递归处理" />
      <item value="递归" />
      <item value="Sql Data Type Spec" />
      <item value="Project select clause." />
      <item value="derive Alias" />
      <item value="PEEK FIELDS DEFAULT" />
      <item value="This is a traditional structured type, where each field must be referenced explicitly. Also, when referencing a struct column, you need to qualify it with the table alias, per standard SQL. For instance, SELECT c.address.zipcode FROM customer AS c is valid but SELECT address.zipcode FROM customer it not valid." />
      <item value="This is a traditional structured type, where each field must be referenced explicitly. &lt;p&gt;Also, when referencing a struct column, you need to qualify it with the table alias, per standard SQL. For instance, {@code SELECT c.address.zipcode FROM customer AS c} is valid but {@code SELECT address.zipcode FROM customer} it not valid." />
      <item value="FULLY QUALIFIED" />
      <item value="数据源初始化完成" />
      <item value="数据源初始hua完成" />
      <item value="数据源初始胡完成" />
      <item value="数据源初始胡wan'c" />
      <item value="数据源初始胡" />
      <item value="数据源" />
      <item value="正在初始化数据源 a" />
      <item value="正在初始化数据源" />
      <item value="正在初始化" />
      <item value="zheng'z" />
      <item value="zeng'n'z" />
      <item value="临时解决编码报错的问题" />
      <item value="Calcite Schema.from(Q Db Schema Holder.get Root Schema())," />
      <item value="Collections.empty List()," />
      <item value="Collection of built-in functions and operators. Valid values include &quot;standard&quot;, &quot;bigquery&quot;, &quot;mysql&quot;, &quot;oracle&quot;, &quot;postgresql&quot; and &quot;spatial&quot;, and also comma-separated lists, for example &quot;oracle,spatial&quot;" />
      <item value="auto Temp" />
      <item value="null Equal To Empty" />
      <item value="approximate Decimal" />
      <item value="approximate Top N" />
      <item value="Properties that may be specified on the JDBC connect string." />
      <item value="Encountered" />
      <item value="Parses an expression for setting or resetting an option in SQL, such as QUOTED_IDENTIFIERS, or explain plan level (physicallogical)." />
      <item value="with Type Coercion Enabled" />
      <item value="with Case Sensitive" />
      <item value="Maximum size of 4000 bytes for varchar2." />
      <item value="if Exists" />
      <item value="leak Detection" />
      <item value="level" />
      <item value="num Direct Arenas" />
      <item value="page Size" />
      <item value="max Order" />
      <item value="small Cache Size" />
      <item value="normal Cache Size" />
      <item value="Returns a key-value mapping associated with the greatest key less than or equal to the given key, or {@code null} if there is no such key." />
      <item value="lower Entry" />
      <item value="Returns a map containing all the entries in the map that match the given name. If case-sensitive, that map will have 0 or 1 elements; if case-insensitive, it may have 0 or more." />
      <item value="ceiling Key" />
      <item value="floor Key" />
      <item value="Experimental" />
      <item value="A {@link SortedMap} extended with navigation methods returning the closest matches for given search targets. Methods {@code lowerEntry}, {@code floorEntry}, {@code ceilingEntry}, and {@code higherEntry} return {@code Map.Entry} objects associated with keys respectively less than, less than or equal, greater than or equal, and greater than a given key, returning {@code null} if there is no such key. Similarly, methods {@code lowerKey}, {@code floorKey}, {@code ceilingKey}, and {@code higherKey} return only the associated keys. All of these methods are designed for locating, not traversing entries. &lt;p&gt;A {@code NavigableMap} may be accessed and traversed in either ascending or descending key order. The {@code descendingMap} method returns a view of the map with the senses of all relational and directional methods inverted. The performance of ascending operations and views is likely to be faster than that of descending ones. Methods {@code subMap}, {@code headMap}, and {@code tailMap} differ from the like-named {@code SortedMap} methods in accepting additional arguments describing whether lower and upper bounds are inclusive versus exclusive. Submaps of any {@code NavigableMap} must implement the {@code NavigableMap} interface. &lt;p&gt;This interface additionally defines methods {@code firstEntry}, {@code pollFirstEntry}, {@code lastEntry}, and {@code pollLastEntry} that return andor remove the least and greatest mappings, if any exist, else returning {@code null}. &lt;p&gt;Implementations of entry-returning methods are expected to return {@code Map.Entry} pairs representing snapshots of mappings at the time they were produced, and thus generally do &lt;em&gt;not&lt;em&gt; support the optional {@code Entry.setValue} method. Note however that it is possible to change mappings in the associated map using method {@code put}. &lt;p&gt;Methods {@link subMap(Object, Object) subMap(K, K)}, {@link headMap(Object) headMap(K)}, and {@link tailMap(Object) tailMap(K)} are specified to return {@code SortedMap} to allow existing implementations of {@code SortedMap} to be compatibly retrofitted to implement {@code NavigableMap}, but extensions and implementations of this interface are encouraged to override these methods to return {@code NavigableMap}. Similarly, {@link keySet()} can be overriden to return {@code NavigableSet}. &lt;p&gt;This interface is a member of the &lt;a href=&quot;{@docRoot}..technotesguidescollectionsindex.html&quot;&gt; Java Collections Framework&lt;a&gt;. @author Doug Lea @author Josh Bloch @param &lt;K&gt; the type of keys maintained by this map @param &lt;V&gt; the type of mapped values @since 1.6" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="22" />
        <entry key="ENGLISH" value="25" />
        <entry key="ROMANIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1620264919235" />
  </component>
</application>